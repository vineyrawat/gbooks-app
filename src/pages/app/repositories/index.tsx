import Navbar from "@/components/app/Navbar";
import { DarkButton } from "@/components/global/Buttons";
import LoadingSpinner from "@/components/global/LoadingSpinner";
import useRepositores from "@/services/customHooks";
import { useSession } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/navigation";

export default function Repositories() {
  const { status }: any = useSession();
  const router = useRouter();
  if (status === "unauthenticated") {
    router.replace("/");
  }

  return status !== "authenticated" ? (
    <>Loading...</>
  ) : (
    <>
      <Head>
        <title>Repositories</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Navbar />
        <div>
          <RepositoriesData />
        </div>
      </main>
    </>
  );
}

function RepositoriesData() {
  const { loading, repositories, fetchData, error } = useRepositores();

  if (loading) {
    return (
      <div className="flex justify-center items-center h-40 ">
        <LoadingSpinner />
      </div>
    );
  }
  if (error) {
    return (
      <div className="flex justify-center gap-2 flex-col items-center h-40 ">
        <h1>Unable to fetch data</h1>
        <p>{error!.message ?? ""}</p>
        <DarkButton onClick={fetchData} />
      </div>
    );
  }

  return <></>;
}

interface MainCardProps {
  title: string;
  path?: string;
  subtitle: string;
  onClick?: () => void;
  icon?: JSX.Element;
}

function MainCard(props: MainCardProps) {
  return (
    <Link href={props.path ?? "#"} onClick={props.onClick}>
      <div className="p-5 min-h-[130px] rounded-sm bg-white shadow-md outline outline-1 outline-gray-200">
        <div className="flex items-center gap-2">
          {props.icon}
          <h1 className="text-xl font-semibold">{props.title}</h1>
        </div>
        <p>{props.subtitle}</p>
      </div>
    </Link>
  );
}
